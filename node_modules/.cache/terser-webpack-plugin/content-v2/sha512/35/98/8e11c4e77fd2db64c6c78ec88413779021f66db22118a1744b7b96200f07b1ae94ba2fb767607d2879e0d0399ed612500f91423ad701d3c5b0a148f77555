{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{223:function(t,n,e){\"use strict\";e.r(n);var r=e(0),i=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h3\",{attrs:{id:\"let-get-line-in-the-file\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#let-get-line-in-the-file\"}},[t._v(\"#\")]),t._v(\" Let get line in the file\")]),t._v(\" \"),e(\"p\",[t._v(\"Call \"),e(\"code\",[t._v(\"line, err := getLine('file.txt', 2)\")]),t._v(\" in this function.\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-golang extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('func getLine(filename string, n int) (string, error) {\\n\\tif n < 1 {\\n\\t\\treturn \"\", fmt.Errorf(\"invalid request: line %d\", n)\\n\\t}\\n\\tf, err := os.Open(filename)\\n\\tif err != nil {\\n\\t\\treturn \"\", err\\n\\t}\\n\\tdefer f.Close()\\n\\tbf := bufio.NewReader(f)\\n\\tvar line string\\n\\tfor lnum := 0; lnum < n; lnum++ {\\n\\t\\tline, err = bf.ReadString(\\'\\\\n\\')\\n\\t\\tif err == io.EOF {\\n\\t\\t\\tswitch lnum {\\n\\t\\t\\tcase 0:\\n\\t\\t\\t\\treturn \"\", errors.New(\"no lines in file\")\\n\\t\\t\\tcase 1:\\n\\t\\t\\t\\treturn \"\", errors.New(\"only 1 line\")\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\treturn \"\", fmt.Errorf(\"only %d lines\", lnum)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif err != nil {\\n\\t\\t\\treturn \"\", err\\n\\t\\t}\\n\\t}\\n\\tif line == \"\" {\\n\\t\\treturn \"\", fmt.Errorf(\"line %d empty\", n)\\n\\t}\\n\\treturn line, nil\\n}\\n')])])]),e(\"p\",[t._v(\"Happy coding 🐘\")])])}),[],!1,null,null,null);n.default=i.exports}}]);","extractedComments":[]}